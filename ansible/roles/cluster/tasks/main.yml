- name: Download file kubectl
  ansible.builtin.get_url:
    url: "https://dl.k8s.io/release/v{{ k8s_version }}/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/
    mode: "u=rwx,g=rx,o=rx"
    checksum: sha256:https://dl.k8s.io/release/v{{ k8s_version }}/bin/linux/amd64/kubectl.sha256

- name: Creates directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0700"
  loop:
    - /root/.kube/

- name: "KubeConfig Admin"
  ansible.builtin.include_tasks:
    file: ./_share/_.kubeconfig.yml
  vars:
    _name: "{{ element._name }}"
    _crt: "{{ element._crt }}"
    _IP: "{{ KUBERNETES_PUBLIC_ADDRESS }}"
    _path: "/root/.kube/config"
  loop:
    - { _name: "admin", _crt: "admin" }
  loop_control:
    loop_var: element

- name: Get local kubeconfig
  ansible.builtin.fetch:
    src: /root/.kube/config
    dest: ~/.kube
    flat: true
  delegate_to: "{{ groups.init[0] }}"
  ignore_errors: true
  run_once: true

- name: "[Cluster] - Wait for kube-apiserver Pod is UP"
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}:6443/version"
    return_content: true
    validate_certs: false
  register: register_result_kube_apiserver
  until: register_result_kube_apiserver.status == 200
  retries: 20
  delay: 5

- ansible.builtin.import_tasks: _01_ccm.yml
- ansible.builtin.import_tasks: _02_k8s.yml
- ansible.builtin.import_tasks: _03_calico.yml

# post

- ansible.builtin.import_tasks: 00_calico_dns.yml
  delegate_to: "{{ groups.init[0] }}"
  run_once: true

# - import_tasks: 01_helm.yml

- ansible.builtin.import_tasks: 02_ingress.yml
  delegate_to: "{{ groups.init[0] }}"
  run_once: true

- ansible.builtin.import_tasks: 03_argocd.yml
  delegate_to: "{{ groups.init[0] }}"
  run_once: true

- ansible.builtin.import_tasks: 04_deploy_app.yml
  delegate_to: "{{ groups.init[0] }}"
  run_once: true
