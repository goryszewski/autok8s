---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cloud-controller-manager
  name: cloud-controller-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cloud-controller-manager
  template:
    metadata:
      labels:
        k8s-app: cloud-controller-manager
    spec:
      serviceAccountName: cloud-controller-manager
      containers:
        - name: cloud-controller-manager
          imagePullPolicy: Always
          image: repo.mgmt.autok8s.ext:5000/cloud-controller-manager:latest
          command:
            - /app/cloud-controller-manager
          args:
            - --v=5
            - --cloud-provider=autok8s
            - --cluster-name=autok8s
            - --use-service-account-credentials
            - --address=127.0.0.1
            # these flags will vary for every cloud provider
            #- --cloud-config=""
            - --leader-elect=true
            # - --allocate-node-cidrs=true
            #- --configure-cloud-routes=true
            #- --cluster-cidr=172.17.0.0/16
      tolerations:
      # this is required so CCM can bootstrap itself
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
      # these tolerations are to have the daemonset runnable on control plane nodes
      # remove them if your control plane nodes should not run pods
      # - key: node-role.kubernetes.io/control-plane
      #   operator: Exists
      #   effect: NoSchedule
      # - key: node-role.kubernetes.io/master
      #   operator: Exists
      #   effect: NoSchedule
      # nodeSelector:
      #   node-role.kubernetes.io/master: ""
