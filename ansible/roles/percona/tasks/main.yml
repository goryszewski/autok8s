---
# tasks file for percona


- name: Download percona-release_latest.generic_all.deb
  ansible.builtin.get_url:
    url: https://repo.percona.com/apt/percona-release_latest.generic_all.deb
    dest: /tmp/percona-release_latest.generic_all.deb
    mode: '0440'
  register: test01

- name: Get stats of a file
  ansible.builtin.stat:
    path: /tmp/percona-release_latest.generic_all.deb
  register: test02


- name: Install deb
  when: test02.stat.exists
  ansible.builtin.apt:
    deb: /tmp/percona-release_latest.generic_all.deb

- name: Enable REPO
  ansible.builtin.shell: percona-release setup pxc-80
  register: test03

- name: Install percona-xtradb-cluster
  ansible.builtin.apt:
    update_cache: true
    allow_change_held_packages: true
    pkg: "percona-xtradb-cluster"
    state: present

- name: Stoped service mysql
  when: "inventory_hostname != hosts[0] "
  ansible.builtin.systemd:
    name: mysql
    enabled: true
    state: stopped

- name: Deploy config
  # when: "inventory_hostname != hosts[0] "
  ansible.builtin.template:
    src: wsrep.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf

# - name: Deploy config new cluster
#   ansible.builtin.template:
#     src: wsrep.cnf-new.j2
#     dest: /etc/mysql/mysql.conf.d/mysqld.cnf
#   delegate_to: "{{ hosts[0] }}"
#   run_once: true

- name: Galera new cluster
  ansible.builtin.shell: systemctl start mysql@bootstrap.service
  delegate_to: "{{ hosts[0] }}"
  run_once: true

- name: Enable service mysql
  when: "inventory_hostname != hosts[0] "
  ansible.builtin.systemd:
    name: mysql
    enabled: true
    state: started

  # SHOW GLOBAL STATUS LIKE 'wsrep_%';

- name: test
  ansible.builtin.shell: mysql -e "SHOW GLOBAL STATUS LIKE 'wsrep%'"
  register: test03

- ansible.builtin.debug: var=test03

- name: Install python3-pymysql
  ansible.builtin.apt:
    update_cache: true
    allow_change_held_packages: true
    pkg: "python3-pymysql"
    state: present

- name: Create a new database with name 'cloud'
  community.mysql.mysql_db:
    name: cloud
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock

- name: Create database user with name 'client' and password 'client' with all database privileges
  community.mysql.mysql_user:
    name: client
    host: "%"
    password: client
    priv: '*.*:ALL'
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock
- name: Simple query to cloud db
  community.mysql.mysql_query:
    login_db: cloud
    query: CREATE TABLE IF NOT EXISTS task (id INT AUTO_INCREMENT PRIMARY KEY,data1 VARCHAR(50) NOT NULL)
    login_unix_socket: /run/mysqld/mysqld.sock
