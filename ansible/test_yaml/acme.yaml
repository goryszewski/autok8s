- name: ACME test
  hosts: all
  gather_facts: false
  vars:
    priv: "/srv/test.key"
    csr: "/srv/test.csr"
    cert: "/srv/test.crt"
  tasks:
    - name: clean
      shell: "rm -rf /srv/test.*"
    - name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
      community.crypto.openssl_privatekey:
        path: "{{ priv }}"

    - name: Generate an OpenSSL Certificate Signing Request
      community.crypto.openssl_csr:
        path: "{{ csr }}"
        privatekey_path: "{{ priv }}"
        common_name: autok8s.xyz
        extended_key_usage:
          - clientAuth
        subject_alt_name:
          - DNS:autok8s.xyz
          - DNS:www.autok8s.xyz
          # - IP:127.0.0.1

    # - name: acme_account
    #   community.crypto.acme_account:
    #     account_key_src: "{{ priv }}"
    #     state: present
    #     terms_agreed: true
    #     contact: test@autok8s.xyz1
    #     acme_version: 2
    #     acme_directory: http://10.17.3.1:8050/acme/directory

    - name: Create a challenge for sample.com using a account key file.
      community.crypto.acme_certificate:
        account_key_src: "{{ priv }}"
        csr: "{{ csr }}"
        dest: "{{ cert }}"
        acme_directory: http://10.17.3.1:8050/acme/directory
        acme_version: 2
        account_email: test@autok8s.xyz
        terms_agreed: true
      register: acme_response

    - name: Debug ACME response
      debug:
        msg: "{{ acme_response }}"

    - name: Let the challenge(s) be validated and retrieve the cert and intermediate certificate
      community.crypto.acme_certificate:
        account_key_src: "{{ priv }}"
        csr: "{{ csr }}"
        dest: "{{ cert }}"
        data: "{{ acme_response }}"
        acme_directory: http://10.17.3.1:8050/acme/directory
        account_email: test@autok8s.xyz
        acme_version: 2
        terms_agreed: true
